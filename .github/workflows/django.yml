name: Afriauth CI

on:
  push:
    branches: [ "main2" ]

concurrency:
  group: "main"
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.11]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
        MAIL_HOST_PASSWORD: ${{ secrets.MAIL_HOST_PASSWORD }}
        EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        ENGINE: ${{ secrets.ENGINE }}
        D7_NETWORK_SECRET_KEY: ${{ secrets.D7_NETWORK_SECRET_KEY }}
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      run: |
        python manage.py test

  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
      - uses: actions/checkout@v4
      - name: Deploy
        run: |
          cd /var/www/actions-runner/_work/afripointauth/afripointauth
          git pull
          pip install -r requirements.txt
          python manage.py makemigrations
          python manage.py migrate
          sudo service apache2 restart
