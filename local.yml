services:
  api: &api
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: afriauth_web_image
    container_name: afriauth_web_container
    volumes:
      - .:/app:z
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    # expose:
    #   - "8000"
    env_file:
      - ./.envs/.env
    depends_on:
      - postgres
    #   # - mailpit
    #   # - redis
    command: /entrypoint
    networks:
      - afriauth_docker_network

  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    image: afriauth_web_postgres
    container_name: afriauth_web_postgres_container
    ports:
      - "5432:5432"
    volumes:
      - afriauth_web_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.env
    networks:
      - afriauth_docker_network

  # client:
  #   build:
  #     context: ./client
  #     dockerfile: ./docker/Dockerfile
  #   container_name: client_container
  #   image: client_image
  #   ports:
  #     - "4200:4200"
  #   # expose:
  #   #   - "3000"
  #   volumes:
  #     - ./client:/app
  #     - /app/node_modules
  #   networks:
  #     - afriauth_docker_network

  # mailpit:
  #   image: docker.io/axllent/mailpit:v1.15
  #   container_name: afriauth_prod_mailpit
  #   ports:
  #     - "8025:8025"
  #     - "1025:1025"
  #   volumes:
  #     - afriauth_prod_mailpit_data:/data
  #   environment:
  #     MP_MAX_MESSAGES: 5000
  #     MP_DATA_FILE: /data/mailpit.db
  #     MP_SMTP_AUTH_ACCEPT_ANY: 1
  #     MP_SMTP_AUTH_ALLOW_INSECURE: 1
  #   networks:
  #     - afriauth_docker_network

  # redis:
  #   image: redis:7.0-alpine3.19
  #   command: redis-server --appendonly yes
  #   container_name: afriauth_redis
  #   volumes:
  #     - afriauth_redis_prod_data:/data
  #   networks:
  #     - afriauth_docker_network

  # celeryworker:
  #   build:
  #     context: .
  #     dockerfile: ./docker/local/django/Dockerfile
  #   command: /start-celeryworker
  #   container_name: afriauth_prod_celeryworker
  #   image: afriauth_prod_celeryworker
  #   volumes:
  #     - .:/app:z
  #   env_file: ./.envs/.env
  #   depends_on:
  #     - redis
  #     - postgres
  #     - mailpit
  #   networks:
  #     - afriauth_docker_network

  # celerybeat:
  #   build:
  #     context: .
  #     dockerfile: ./docker/local/django/Dockerfile
  #   command: /start-celerybeat
  #   container_name: afriauth_prod_celerybeat
  #   image: afriauth_prod_celerybeat
  #   volumes:
  #     - .:/app:z
  #   env_file: ./.envs/.env
  #   depends_on:
  #     - redis
  #     - postgres
  #     - mailpit
  #   networks:
  #     - afriauth_docker_network

  # flower:
  #   <<: *api
  #   image: afriauth_prod_flower
  #   container_name: afriauth_prod_flower
  #   ports:
  #     - "5555:5555"
  #   command: /start-flower

  nginx:
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    restart: always
    container_name: afriauth_nginx
    ports:
      - "8080:80"
    volumes:
      - ./staticfiles:/app/staticfiles
      - logs_store:/var/log/nginx
    depends_on:
      - api
    networks:
      - afriauth_docker_network

networks:
  afriauth_docker_network:
    external: true

volumes:
  afriauth_web_postgres_data: {}
  logs_store: {}
  node_modules: {}
